#include "String.h"

int main(void)
{

	//深拷贝与浅拷贝
	String s1("AAA");
	s1.Display();
	String s2 = s1;		//若自己没有实现一个拷贝构造函数， 则调用系统提供的默认的拷贝构造函数
						// 系统提供的默认拷贝构造函数实施的是浅拷贝，等价于s2.str_ = s1.str_，
						//如果还有其他成员，就是逐成员赋值
						//这里s2中的str_指针与s1中的str_指针指向同一块内存，在构造s2对象的时候没有分配自己的内存，
						//两个对象指向同一块内存
						//当2个对象生存周期结束时，都要调用析构函数，同一块内存被释放2次，因而出现了运行时错误
						//解决办法：不适用系统提供的默认的拷贝构造函数，自己实现一个拷贝构造函数

	//赋值运算
	String s3;
	s3.Display();
	s3 = s2;			// 调用等号运算符
						// 系统提供的默认等号运算符实施的是浅拷贝，等价于s3.str_ = s2.str_;如果还有其他成员，就是逐成员赋值，也会出现一个对象被销毁2次，
						//所以提供自己的等号运算符
						// s3.operator=(s2);

	//禁止拷贝
	// 要让对象是独一无二的，我们要禁止拷贝
	// 方法是将拷贝构造函数与=运算符声明为私有，并且不提供它们的实现
	return 0;
}