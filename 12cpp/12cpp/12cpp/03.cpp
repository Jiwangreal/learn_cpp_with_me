#include "Test.h"

int main(void)
{
	//Test t(10);		// 带一个参数的构造函数，充当的是普通构造函数的功能

	//t = 20;			// 将20这个整数赋值给t对象
	//// 1、调用转换构造函数将20这个整数转换成类类型 （生成一个临时对象）
	//// 2、将临时对象赋值给t对象(调用的是=运算符)

	//Test t2;

	//在初始化语句中的等号不是运算符。编译器对这种表示方法有特殊的解释
	//这里不是产生一个临时对象，将临时对象赋值给t，这里不是一个赋值操作，而是初始化操作
	Test t = 10;		// 等价于Test t(10); 这里的=不是等号运算符（不是赋值操作），而是表示初始化。

	//这里的20并不是对象，所以先将20转换构造一个临时对象出来，然后再将临时对象赋值给t，调用operate=
	//接着销毁临时对象
	t = 20;				// 赋值操作，调用=号运算符（operate=）

	//t2调用默认构造函数
	Test t2;
	//接着把t2赋值给t，调用=号运算符（operate=）
	t = t2;				// 赋值操作，等价于：t.operator=(t2);将operator=看成是一个函数，然后将t2参数
						//传递进去，将t2的数据成员逐成员赋给t，最后返回的是t对象本身，因为(t2)这里隐含的
						//第一个参数是this指针，this指针指向自身t


	return 0;
}